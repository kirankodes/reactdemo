{"version":3,"sources":["component/Clear.js","App.js","reportWebVitals.js","index.js"],"names":["Clear","data","id","myname","myage","useState","array","setarray","map","num","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLA8BeA,EA3BD,WAEV,IAAMC,EAAO,CACT,CACIC,GAAG,EAAGC,OAAO,QAASC,MAAM,IAEhC,CACIF,GAAG,EAAGC,OAAO,QAASC,MAAM,IAEhC,CACIF,GAAG,EAAGC,OAAO,QAASC,MAAM,KAKpC,EAAyBC,mBAASJ,GAAlC,mBAAOK,EAAP,KAAcC,EAAd,KAIA,OACI,gCACGD,EAAME,KAAI,SAACC,GAAD,OAAU,0CAAaA,EAAIN,OAAjB,UACnB,wBAAQO,QANG,WACfH,EAAS,2BAAIN,GAAL,IAAWE,OAAO,cAKtB,uBCmBGQ,EAlCH,WAIV,MAAuBN,mBAAS,SAAhC,6BAcA,OACE,8BASG,cAAC,EAAD,OC1BQO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.699d983b.chunk.js","sourcesContent":["import React , {useEffect, useState } from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Clear = () => {\r\n\r\n    const data = [\r\n        {\r\n            id:0, myname:\"kiran\", myage:71\r\n        },\r\n        {\r\n            id:1, myname:\"kumar\", myage:71\r\n        },\r\n        {\r\n            id:2, myname:\"yadav\", myage:71\r\n        },\r\n    ]\r\n\r\n\r\n    const [array, setarray]= useState(data)\r\n    const claerarray = () => {\r\n        setarray({...data, myname:\"kavitha\"});\r\n    }\r\n    return (\r\n        <div>\r\n          {array.map((num) =>  <h1> name : {num.myname} </h1>)}\r\n            <button onClick={claerarray}>clear</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Clear\r\n","import React,{ useState } from 'react'\nimport Clear from './component/Clear';\nimport Just from './component/Just';\nimport Ruleshooks from './component/ruleshook'\nimport Useeffects1 from './component/Useeffects/Useeffects1';\nimport Usestateobject from './component/Usestateobject';\nimport Usestateodject from './component/Usestateobject';\n\nimport Usestatearray from './Usestatearray';\n\nconst App = () => {\n\n  // let val = 'kiran';\n\n  const [val , setval] = useState('kiran');\n  const changename =()=>\n  {\n    // val = 'kirankodes';\n    // console.log(val)\n    let temp= val;\n\n    if(temp == 'kiran'){\n      setval('kirankodes');\n    }\n    else{\n      setval('kiran');\n    }\n  }\n  return (\n    <div>\n       {/* <h1>{val}</h1> */}\n       {/* <button className=\"btn\" onClick={changename } >click me</button> */}\n       {/* <Ruleshooks /> */}\n       {/* <Usestatearray  /> */}\n       {/* <Just /> */}\n       {/* <Usestateobject /> */}\n\n       {/* <Useeffects1 /> */}\n       <Clear />\n\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}